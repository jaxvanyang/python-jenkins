{
  "comments": [
    {
      "key": {
        "uuid": "ba15a1d1_2656c35c",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 6987
      },
      "writtenOn": "2015-09-15T20:44:10Z",
      "side": 1,
      "message": "Providing the \u0027estimatedDuration\u0027 time might be useful.\n\nAn example of the resulting output from this method would be helpful.",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_37158b3f",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-09-15T21:24:01Z",
      "side": 1,
      "message": "This docstring does exactly what get_nodes does below. You want me to also add python interactive interpreter output?",
      "parentUuid": "ba15a1d1_2656c35c",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_52104d4e",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 6987
      },
      "writtenOn": "2015-09-15T21:45:01Z",
      "side": 1,
      "message": "yes, if you don\u0027t mind.",
      "parentUuid": "ba15a1d1_37158b3f",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_cb05957a",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 751,
      "author": {
        "id": 679
      },
      "writtenOn": "2015-09-15T18:28:17Z",
      "side": 1,
      "message": "Wouldn\u0027t this be the job\u0027s display name, rather than its actual name?  I would be expecting the actual name, the name I would pass to, e.g., stop_build().",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_d64e986e",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 751,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-09-15T18:41:48Z",
      "side": 1,
      "message": "The data structure called \"build\" in https://review.openstack.org/#/c/223276/3/tests/test_build.py is verbatim what you get from Jenkins. There are two values with the job name in it. fullDisplayName and url. I chose to parse it out of fullDisplayName instead of url.\n\nIf you can find a better way to do this given what Jenkins tells you I would be glad to do it that way but this seems to be our only option (parse either of those two fields).",
      "parentUuid": "ba15a1d1_cb05957a",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_e6820b94",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 751,
      "author": {
        "id": 6987
      },
      "writtenOn": "2015-09-15T20:44:10Z",
      "side": 1,
      "message": "I don\u0027t see a difference between fullDisplayName and \"actual name\".  What is this \u0027actual name\u0027 you are referring to?",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_bc998221",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 751,
      "author": {
        "id": 679
      },
      "writtenOn": "2015-09-15T21:19:50Z",
      "side": 1,
      "message": "What\u0027s bothering me—and I\u0027ll confess I haven\u0027t looked at the Jenkins API docs on this point—but a job has both a \"name,\" that you use to query it through the API; and a \"display name,\" which you can populate with a human-friendly name for the UI.  I want to make sure that what\u0027s being returned is the former, rather than the latter, as I\u0027m expecting that passing a display name to something like stop_build() would give an error.  (For the record, my not having checked an example yet is why I didn\u0027t vote when making the above comment…)",
      "parentUuid": "ba15a1d1_e6820b94",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_975b372e",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 751,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-09-15T21:24:01Z",
      "side": 1,
      "message": "Again, the fullDisplayName in the test is verbatim from Jenkins... You get what appears to be the job name with #run_number appended. In this case fullDisplay name is \"test #1\". The only other alternative I see here is to parse the name out of the url value. I get that you want ot just get the name but it does not exist here.",
      "parentUuid": "ba15a1d1_bc998221",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_32435944",
        "filename": "jenkins/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 751,
      "author": {
        "id": 679
      },
      "writtenOn": "2015-09-15T21:46:17Z",
      "side": 1,
      "message": "OK, I just did some testing, and I\u0027ve confirmed that fullDisplayName is exactly what I worried that it was: the display name of the job.  It looks like the only way to get the job name that I want is to parse the URL…",
      "parentUuid": "ba15a1d1_975b372e",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_3910244e",
        "filename": "tests/test_build.py",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 6987
      },
      "writtenOn": "2015-09-15T20:44:10Z",
      "side": 1,
      "message": "how about making one of these tests exercise the path with a non master node?",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba15a1d1_d79f6fb2",
        "filename": "tests/test_build.py",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 4146
      },
      "writtenOn": "2015-09-15T21:24:01Z",
      "side": 1,
      "message": "It won\u0027t actually affect the coverage really other than to get the one line that doesn\u0027t special case master. I can add it.",
      "parentUuid": "ba15a1d1_3910244e",
      "revId": "c704ab4c9f7fdfe5b766765d3811a5191e7634ab",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}