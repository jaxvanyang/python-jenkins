{
  "comments": [
    {
      "key": {
        "uuid": "dae33548_2a5b71f7",
        "filename": "jenkins/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 670,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-02-17T20:03:02Z",
      "side": 1,
      "message": "From a user POV i think having fullname would be better than not having it at all because I would expect to always get the same dict object to be returned from this method.  Maybe add fullname to the dict and make it either empty (or the same as \u0027name\u0027) in this case? \n\nFor example:\n\n jobs \u003d get_jobs();\n print (jobs[\u0027fullname\u0027])  \u003c-- gives me the fullname\n\n my_view_jobs \u003d get_jobs(view_name\u003d\"my_view\");\n print (my_view_jobs[\u0027fullname\u0027])  \u003c-- get a key error!  i would rather get either empty or the same as the name.",
      "revId": "f280c3ad903cd603afe0bd9f665dbe7d74168d1c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae33548_35447619",
        "filename": "jenkins/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 701,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-02-17T20:03:02Z",
      "side": 1,
      "message": "nit: you probably could have left the function in previous patchset and called it here.  Maybe just add underscore to indicate a private method?",
      "revId": "f280c3ad903cd603afe0bd9f665dbe7d74168d1c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dae33548_ca9125f3",
        "filename": "jenkins/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 708,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-02-17T20:03:02Z",
      "side": 1,
      "message": "would you mind creating tests to validate these error conditions?  There should be plenty of examples in the existing \u0027jobs\u0027 tests.",
      "revId": "f280c3ad903cd603afe0bd9f665dbe7d74168d1c",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}