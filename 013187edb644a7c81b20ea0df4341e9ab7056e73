{
  "comments": [
    {
      "key": {
        "uuid": "fa69d971_2c7f50ac",
        "filename": "doc/source/examples.rst",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-06T00:41:32Z",
      "side": 1,
      "message": "nit: need a few more dashes here",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_021bae73",
        "filename": "doc/source/examples.rst",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-12T17:46:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa69d971_2c7f50ac",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa69d971_eeb36298",
        "filename": "doc/source/examples.rst",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-06T00:41:32Z",
      "side": 1,
      "message": "what is \u0027xml\u0027 object here?  I think a more complete example would be to go thru the process of creating a job then create a promotion from that job.  Also it would be nice to create a sample \u0027PROMO_XML\u0027 object and reference it like it\u0027s done for the create job example (line 42).",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_423f66b4",
        "filename": "doc/source/examples.rst",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-12T17:46:53Z",
      "side": 1,
      "message": "I\u0027ve extended the example. It\u0027s not that simple since the\njob config needs to be correct too (which is already handled\nnicely by jenkins-job-builder). Hope it\u0027s o.k. now.",
      "parentUuid": "fa69d971_eeb36298",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_c5ab52d5",
        "filename": "doc/source/examples.rst",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-12T23:47:32Z",
      "side": 1,
      "message": "looks good",
      "parentUuid": "da6ed579_423f66b4",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa69d971_61fa2345",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-06T00:41:32Z",
      "side": 1,
      "message": "Is there a depth that you can specify for this endpoint, similar to job or build info?  if so it might be nice to allow users to specify that.",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_a29bc2c8",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-12T17:46:53Z",
      "side": 1,
      "message": "Didn\u0027t know about depth so far but it exists and works. Added.",
      "parentUuid": "fa69d971_61fa2345",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa69d971_21be6b65",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1329,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-06T00:41:32Z",
      "side": 1,
      "message": "we prefer \u0027job_name\u0027 instead of \u0027jobname\u0027.",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_82aa3ed3",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1329,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-12T17:46:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa69d971_21be6b65",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa69d971_21bc2bdb",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1376,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-06T00:41:32Z",
      "side": 1,
      "message": "This method will return None if the promo does not exist which probably should be false instead.  I see you followed the pattern for jobs_exists() which I think should return \u0027False\u0027 if job doesn\u0027t exist as well.  How about adding an else to this and add a test to verify?",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_42ad26e8",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1376,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-12T17:46:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa69d971_21bc2bdb",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa69d971_01ea47ac",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1399,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-06T00:41:32Z",
      "side": 1,
      "message": "Would it make sense to call this method without specifying a job_name so that users can get all promotions from all jobs?  or specify a job_name if they want to get promotions on a specific job?",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_a2e9821c",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1399,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-12T17:46:53Z",
      "side": 1,
      "message": "Promotions are always tied to a job so we can\u0027t get them individually.",
      "parentUuid": "fa69d971_01ea47ac",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_ba78bd2c",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1399,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-12T23:47:32Z",
      "side": 1,
      "message": "Sorry, I don\u0027t understand what you mean.  I was thinking this could work like get_all_jobs() method.  which in this case will iterate over all jobs to get all promotions. if a specific job is passed in then it will only return promo info for that one specific job.  Although i guess it\u0027s not required for this change but maybe can add a get_all_promotions on a separate change?",
      "parentUuid": "da6ed579_a2e9821c",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_e19bbc70",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1399,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-13T16:53:09Z",
      "side": 1,
      "message": "Yes, we can do a get_all_promotions() it would need to return a ditionary:\n\n{ \u0027jobname1\u0027: [ \u0027promo1\u0027, \u0027promo2\u0027, ], \u0027jobname2\u0027: [], \u0027jobnam3\u0027: [ \u0027promofoo\u0027, \u0027promobar\u0027 ] } \n\nor similar since promotions are tied to jobs (you can\u0027t just reuse the promotion from another job (without copying it\u0027s xml).\n\nI\u0027d be happy to add this but would prefer to do this in a follow up since it might spark more discussion on this topic (and doesn\u0027t affect the current API).",
      "parentUuid": "da6ed579_ba78bd2c",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa69d971_61f0e391",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1423,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-06T00:41:32Z",
      "side": 1,
      "message": "having an example config_xml would be very handy, maybe something similar to EMPTY_JOB_CONFIG above",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_42dbe67c",
        "filename": "jenkins/__init__.py",
        "patchSetId": 2
      },
      "lineNbr": 1423,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-12T17:46:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa69d971_61f0e391",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa69d971_a10edb38",
        "filename": "tests/test_promotion.py",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6987
      },
      "writtenOn": "2016-01-06T00:41:32Z",
      "side": 1,
      "message": "Thanks for adding tests.  If you run \u0027tox -ecover\u0027 locally and open cover/index.html  you\u0027ll see that there a few lines not tested.   Would you closing the gap there?   There\u0027s an entire suite of tests for jobs in tests/jobs so that might help.",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6ed579_62caaaa3",
        "filename": "tests/test_promotion.py",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9943
      },
      "writtenOn": "2016-01-12T17:46:53Z",
      "side": 1,
      "message": "Should hopefully be o.k. now.",
      "parentUuid": "fa69d971_a10edb38",
      "revId": "013187edb644a7c81b20ea0df4341e9ab7056e73",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}