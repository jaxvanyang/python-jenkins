{
  "comments": [
    {
      "key": {
        "uuid": "ba3cc151_4681bf49",
        "filename": "jenkins/__init__.py",
        "patchSetId": 9
      },
      "lineNbr": 504,
      "author": {
        "id": 6987
      },
      "writtenOn": "2015-06-29T19:58:16Z",
      "side": 1,
      "message": "if we already have a get_plugins_info and get_plugin_info methods then I assume users would only ever use this as a helper for comparing plugin versions?  would it make sense to change this method name to _get_plugins?",
      "revId": "4e269bafb35ac5dde1d4ab51a531d7144dd2e625",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_46145ff4",
        "filename": "jenkins/__init__.py",
        "patchSetId": 9
      },
      "lineNbr": 504,
      "author": {
        "id": 679
      },
      "writtenOn": "2015-06-29T20:03:05Z",
      "side": 1,
      "message": "I\u0027d actually think maybe we want to go the other way: mark the get_plugins_info() and get_plugin_info() methods as deprecated, with this method being the replacement.  After all, this change no longer calls get_plugins() anywhere, so marking it internal with a leading \u0027_\u0027 doesn\u0027t really make senseâ€¦",
      "parentUuid": "ba3cc151_4681bf49",
      "revId": "4e269bafb35ac5dde1d4ab51a531d7144dd2e625",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a41bdd9_58a40fa5",
        "filename": "jenkins/__init__.py",
        "patchSetId": 9
      },
      "lineNbr": 504,
      "author": {
        "id": 1054
      },
      "writtenOn": "2015-07-13T18:25:41Z",
      "side": 1,
      "message": "That was my thinking as well, leave get_plugins_info() as the raw access to plugin json. This method would always be processed information.\n\nSince this restricts the depth of information query for plugins, it seems sensible to at least retain one method that can be alter to query for more/less info.\n\nOr should this method get a depth arg as well?",
      "parentUuid": "ba3cc151_46145ff4",
      "revId": "4e269bafb35ac5dde1d4ab51a531d7144dd2e625",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a50d1a3_9575c1fb",
        "filename": "jenkins/__init__.py",
        "patchSetId": 9
      },
      "lineNbr": 504,
      "author": {
        "id": 1054
      },
      "writtenOn": "2015-07-30T11:16:43Z",
      "side": 1,
      "message": "So before I rebase this to fix the merge comflict, would be good to have a clear idea of what direction we want to go.\n\n* Merge this with the get_plugins_info() method and simply always alter what is returned to use the Plugin class\n* Merge this with get_plugins_info() and add a raw option to the method for those that want to get the pure json response to both get_plugin_info() and get_plugins_info() methods\n* Keep both sets of methods separate as currently in place.\n\nI\u0027m actually tempted to go with option 1? But I have some concerns about altering the response given from the API, even if in 99.99% of cases the receiving application won\u0027t notice. Is this sufficiently transparent that we can slip it in? or is it still breaking the API?",
      "parentUuid": "9a41bdd9_58a40fa5",
      "revId": "4e269bafb35ac5dde1d4ab51a531d7144dd2e625",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}